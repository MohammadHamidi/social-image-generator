# Coolify Environment Configuration
# Copy these variables to your Coolify service environment settings

# ============================================================================
# Application Configuration (Required)
# ============================================================================

# Port configuration - Coolify will auto-detect from EXPOSE in Dockerfile
# Leave as default unless you have a specific reason to change
PORT=5000

# Flask environment - use 'production' for Coolify deployments
FLASK_ENV=production

# Python configuration
PYTHONPATH=/app/src
PYTHONDONTWRITEBYTECODE=1

# ============================================================================
# Coolify-Specific Settings
# ============================================================================

# Health check endpoint (already configured in Dockerfile)
# Coolify will automatically use: http://localhost:5000/health

# ============================================================================
# Optional Performance Tuning
# ============================================================================

# Max upload size in bytes (default: 100MB)
# MAX_CONTENT_LENGTH=104857600

# Number of workers (for production, use gunicorn)
# WEB_CONCURRENCY=4

# ============================================================================
# Storage Configuration (Coolify Persistent Volumes)
# ============================================================================
# In Coolify, configure these as Persistent Storage:
#
# Source (Host Path)      -> Destination (Container Path)
# /uploads                -> /app/uploads
# /output                 -> /app/output
# /generated              -> /app/generated
#
# Note: Coolify will handle the volume mounting automatically

# ============================================================================
# Security Recommendations for Coolify
# ============================================================================

# Set these in Coolify's environment variables (not in this file):
# - API keys
# - Secrets
# - Credentials
#
# Coolify encrypts environment variables by default

# ============================================================================
# Monitoring & Logging
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL=INFO

# ============================================================================
# Coolify Deployment Notes
# ============================================================================
#
# 1. Coolify will automatically:
#    - Build the Docker image from your Dockerfile
#    - Detect the exposed port (5000)
#    - Use the health check endpoint (/health)
#    - Restart the container if it becomes unhealthy
#    - Provide SSL/TLS via Lets Encrypt (if domain is configured)
#
# 2. You should configure:
#    - Persistent volumes for uploads, output, and generated directories
#    - Custom domain (optional)
#    - Environment variables via Coolify UI
#    - Resource limits (CPU/Memory) via Coolify UI
#
# 3. Build Configuration in Coolify:
#    - Build Pack: Dockerfile
#    - Dockerfile Location: ./Dockerfile
#    - Build Context: ./
#
# ============================================================================
